%PDF-1.4
1 0 obj
<<
/CreationDate D:20110828190553
/Producer (Factor)
/Author (jbenedik)
/Creator (created with Factor)
>>

endobj
2 0 obj
<<
/Type /Catalog
/Pages 15 0 R
>>
endobj
3 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Helvetica
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Times
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Courier
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Helvetica-Bold
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Times-Bold
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Courier-Bold
>>
endobj
9 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Helvetica-Italic
>>
endobj
10 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Times-Italic
>>
endobj
11 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Courier-Italic
>>
endobj
12 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Helvetica-BoldItalic
>>
endobj
13 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Times-BoldItalic
>>
endobj
14 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Courier-BoldItalic
>>
endobj
15 0 obj
<<
/Type /Pages
/MediaBox [ 0 0 612 792 ]
/Count 7
/Kids [ 16 0 R 18 0 R 20 0 R 22 0 R 24 0 R 26 0 R 28 0 R ]
>>
endobj
16 0 obj
<<
/Type /Page
/Parent 15 0 R
/Contents 17 0 R
/Resources << /Font <<
/F1 3 0 R /F2 4 0 R /F3 5 0 R
/F4 6 0 R /F5 7 0 R /F6 8 0 R
/F7 9 0 R /F8 10 0 R /F9 11 0 R
/F10 12 0 R /F11 13 0 R /F12 14 0 R
>> >>
>>
endobj
17 0 obj
<<
/Length 2097
>>
stream
BT
/F4 20 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 722.599609 Tm
(Your first program) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 54.000000 710.299805 Tm
(Factor documentation) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 160.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 172.000000 710.299805 Tm
(Factor handbook) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 698.299805 Tm
(Prev:) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 85.000000 698.299805 Tm
(Factor cookbook) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 681.299805 Tm
(Next:) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 85.000000 681.299805 Tm
(The language) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 643.759766 Tm
(In this tutorial, we will write a simple Factor program which prompts the user to enter a word, ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 631.759766 Tm
(and tests if it is a palindrome \(that is, the word is spelled the same backwards and forwards\).) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 612.759766 Tm
(In this tutorial, you will learn about basic Factor development tools.) Tj
ET
BT
/F4 14 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 599.219727 Tm
( ) Tj
ET
BT
/F4 14 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 58.000000 599.219727 Tm
(Creating a vocabulary for your first program) Tj
ET
BT
/F4 14 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 585.219727 Tm
( ) Tj
ET
BT
/F4 14 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 58.000000 585.219727 Tm
(Writing some logic in your first program) Tj
ET
BT
/F4 14 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 571.219727 Tm
( ) Tj
ET
BT
/F4 14 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 58.000000 571.219727 Tm
(Testing your first program) Tj
ET
BT
/F4 14 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 557.219727 Tm
( ) Tj
ET
BT
/F4 14 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 58.000000 557.219727 Tm
(Extending your first program) Tj
ET

endstream
endobj
18 0 obj
<<
/Type /Page
/Parent 15 0 R
/Contents 19 0 R
/Resources << /Font <<
/F1 3 0 R /F2 4 0 R /F3 5 0 R
/F4 6 0 R /F5 7 0 R /F6 8 0 R
/F7 9 0 R /F8 10 0 R /F9 11 0 R
/F10 12 0 R /F11 13 0 R /F12 14 0 R
>> >>
>>
endobj
19 0 obj
<<
/Length 4527
>>
stream
BT
/F4 20 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 722.599609 Tm
(Creating a vocabulary for your first program) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 54.000000 710.299805 Tm
(Factor documentation) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 160.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 172.000000 710.299805 Tm
(Factor handbook) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 254.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 266.000000 710.299805 Tm
(Your first program) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 698.299805 Tm
(Next:) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 85.000000 698.299805 Tm
(Writing some logic in your first program) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 658.759766 Tm
(Factor source code is organized into ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 251.000000 658.759766 Tm
(Vocabularies) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 325.000000 658.759766 Tm
(. Before we can write our first program, ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 646.759766 Tm
(we must create a vocabulary for it.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 627.759766 Tm
(Start by loading the scaffold tool:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 615.953125 Tm
(USE: tools.scaffold) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 596.759766 Tm
(Then, ask the scaffold tool to create a new vocabulary named ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 384.000000 596.953125 Tm
(palindrome) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 457.000000 596.759766 Tm
(:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 584.953125 Tm
("resource:work" "palindrome" scaffold-vocab) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 565.759766 Tm
(If you look at the output, you will see that a few files were created in your "work" directory, ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 553.759766 Tm
(and that the new source file was loaded.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 534.759766 Tm
(The following phrase will print the full path of your work directory:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 522.953125 Tm
("work" resource-path .) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 503.759766 Tm
(The work directory is one of several ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 247.000000 503.759766 Tm
(Vocabulary roots) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 345.000000 503.759766 Tm
( where Factor searches for ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 491.759766 Tm
(vocabularies. It is possible to define new vocabulary roots; see ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 390.000000 491.759766 Tm
(Working with code outside ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 54.000000 479.759766 Tm
(of the Factor source tree) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 195.000000 479.759766 Tm
(. To keep things simple in this tutorial, we'll just use the work ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 467.759766 Tm
(directory, though.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 448.759766 Tm
(Open the work directory in your file manager, and open the subdirectory named ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 479.000000 448.953125 Tm
(palindrome) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 436.759766 Tm
(. Inside this subdirectory you will see a file named ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 321.000000 436.953125 Tm
(palindrome.factor) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 444.000000 436.759766 Tm
(. Open this file in ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 424.759766 Tm
(your text editor.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 405.759766 Tm
(You are now ready to go on to the next section: ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 308.000000 405.759766 Tm
(Writing some logic in your first program) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 537.000000 405.759766 Tm
(.) Tj
ET

endstream
endobj
20 0 obj
<<
/Type /Page
/Parent 15 0 R
/Contents 21 0 R
/Resources << /Font <<
/F1 3 0 R /F2 4 0 R /F3 5 0 R
/F4 6 0 R /F5 7 0 R /F6 8 0 R
/F7 9 0 R /F8 10 0 R /F9 11 0 R
/F10 12 0 R /F11 13 0 R /F12 14 0 R
>> >>
>>
endobj
21 0 obj
<<
/Length 10970
>>
stream
BT
/F4 20 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 722.599609 Tm
(Writing some logic in your first program) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 54.000000 710.299805 Tm
(Factor documentation) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 160.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 172.000000 710.299805 Tm
(Factor handbook) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 254.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 266.000000 710.299805 Tm
(Your first program) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 698.299805 Tm
(Prev:) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 85.000000 698.299805 Tm
(Creating a vocabulary for your first program) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 681.299805 Tm
(Next:) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 85.000000 681.299805 Tm
(Testing your first program) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 643.759766 Tm
(Your ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 79.000000 643.953125 Tm
(palindrome.factor) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 202.000000 643.759766 Tm
( file should look like the following after the previous section:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 631.953125 Tm
(! Copyright \(C\) 2011 <your name here>) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 619.953125 Tm
(! See http://factorcode.org/license.txt for BSD license.) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 607.953125 Tm
(USING: ;) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 595.953125 Tm
(IN: palindrome) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 576.759766 Tm
(Notice that the file ends with an ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 225.000000 576.759766 Tm
(IN:) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 241.000000 576.759766 Tm
( form telling Factor that all definitions in this source file ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 564.759766 Tm
(should go into the ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 153.000000 564.953125 Tm
(palindrome) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 226.000000 564.759766 Tm
( vocabulary using the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 343.000000 564.759766 Tm
(IN:) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 359.000000 564.759766 Tm
( word. We will add new definitions ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 552.759766 Tm
(after the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 102.000000 552.759766 Tm
(IN:) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 118.000000 552.759766 Tm
( form.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 533.759766 Tm
(In order to be able to call the words defined in the ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 321.000000 533.953125 Tm
(palindrome) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 394.000000 533.759766 Tm
( vocabulary, you need to ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 521.759766 Tm
(issue the following command in the listener:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 509.953125 Tm
(USE: palindrome) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 490.759766 Tm
(Now, we will be making some additions to the file. Since the file was loaded by the scaffold ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 478.759766 Tm
(tool in the previous step, you need to tell Factor to reload it if it changes. Factor has a handy ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 466.759766 Tm
(feature for this; pressing ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 187.000000 466.953125 Tm
(F2) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 202.000000 466.759766 Tm
( in the listener window will reload any changed source files. You ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 454.759766 Tm
(can also force a single vocabulary to reload, in case the refresh feature does not ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 442.759766 Tm
(pick up changes from disk:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 430.953125 Tm
("palindrome" reload) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 411.759766 Tm
(We will now write our first word using ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 254.000000 411.759766 Tm
(:) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 258.000000 411.759766 Tm
(. This word will test if a string is a palindrome; it will ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 399.759766 Tm
(take a string as input, and give back a boolean as output. We will call this word ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 475.000000 399.953125 Tm
(palindrome?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 387.759766 Tm
(, following a naming convention that words returning booleans have names ending with ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 519.000000 387.953125 Tm
(?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 527.000000 387.759766 Tm
(.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 368.759766 Tm
(Recall that a string is a palindrome if it is spelled the same forwards or backwards; that is, if ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 356.759766 Tm
(the string is equal to its reverse. We can express this in Factor as follows:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 344.953125 Tm
(: palindrome? \( string -- ? \) dup reverse = ;) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 325.759766 Tm
(Place this definition at the end of your source file.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 306.759766 Tm
(Now we have changed the source file, we must reload it into Factor so that we can test the ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 294.759766 Tm
(new definition. To do this, simply go to the Factor listener and press ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 415.000000 294.953125 Tm
(F2) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 430.000000 294.759766 Tm
(. This will find any ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 282.759766 Tm
(previously-loaded source files which have changed on disk, and reload them.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 263.759766 Tm
(When you do this, you will get an error about the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 315.000000 263.759766 Tm
(dup) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 337.000000 263.759766 Tm
( word not being found. This is because ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 251.759766 Tm
(this word is part of the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 175.000000 251.759766 Tm
(kernel) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 211.000000 251.759766 Tm
( vocabulary, but this vocabulary is not part of the ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 239.759766 Tm
(source file's ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 121.000000 239.759766 Tm
(Parse-time word lookup) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 258.000000 239.759766 Tm
(. You must explicitly list dependencies in source files. ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 227.759766 Tm
(This allows Factor to automatically load required vocabularies and makes larger programs ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 215.759766 Tm
(easier to maintain.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 196.759766 Tm
(To add the word to the search path, first convince yourself that this word is in the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 484.000000 196.759766 Tm
(kernel) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 520.000000 196.759766 Tm
( ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 184.759766 Tm
(vocabulary. Enter ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 150.000000 184.953125 Tm
(dup) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 172.000000 184.759766 Tm
( in the listener's input area, and press ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 375.000000 184.953125 Tm
(H) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 383.000000 184.759766 Tm
(. This will open the ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 172.759766 Tm
(documentation browser tool, viewing the help for the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 335.000000 172.759766 Tm
(dup) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 357.000000 172.759766 Tm
( word. One of the subheadings in ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 160.759766 Tm
(the help article will mention the word's vocabulary.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 141.759766 Tm
(Go back to the third line in your source file and change it to:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 129.953125 Tm
(USING: kernel ;) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 110.759766 Tm
(Next, find out what vocabulary ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 219.000000 110.759766 Tm
(reverse) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 262.000000 110.759766 Tm
( lives in; type the word name ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 418.000000 110.953125 Tm
(reverse) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 469.000000 110.759766 Tm
( in the ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 98.759766 Tm
(listener's input area, and press ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 221.000000 98.953125 Tm
(H) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 229.000000 98.759766 Tm
(.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 79.759766 Tm
(It lives in the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 125.000000 79.759766 Tm
(sequences) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 188.000000 79.759766 Tm
( vocabulary, so we add that to the search path:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 67.953125 Tm
(USING: kernel sequences ;) Tj
ET

endstream
endobj
22 0 obj
<<
/Type /Page
/Parent 15 0 R
/Contents 23 0 R
/Resources << /Font <<
/F1 3 0 R /F2 4 0 R /F3 5 0 R
/F4 6 0 R /F5 7 0 R /F6 8 0 R
/F7 9 0 R /F8 10 0 R /F9 11 0 R
/F10 12 0 R /F11 13 0 R /F12 14 0 R
>> >>
>>
endobj
23 0 obj
<<
/Length 1288
>>
stream
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 721.759766 Tm
(Finally, check what vocabulary ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 220.000000 721.759766 Tm
(=) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 228.000000 721.759766 Tm
( lives in, and confirm that it's in the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 415.000000 721.759766 Tm
(kernel) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 451.000000 721.759766 Tm
( vocabulary, which ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 709.759766 Tm
(we've already added to the search path.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 690.759766 Tm
(Now press ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 115.000000 690.953125 Tm
(F2) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 130.000000 690.759766 Tm
( again, and the source file should reload without any errors. You can now go ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 678.759766 Tm
(on and learn about ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 158.000000 678.759766 Tm
(Testing your first program) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 308.000000 678.759766 Tm
(.) Tj
ET

endstream
endobj
24 0 obj
<<
/Type /Page
/Parent 15 0 R
/Contents 25 0 R
/Resources << /Font <<
/F1 3 0 R /F2 4 0 R /F3 5 0 R
/F4 6 0 R /F5 7 0 R /F6 8 0 R
/F7 9 0 R /F8 10 0 R /F9 11 0 R
/F10 12 0 R /F11 13 0 R /F12 14 0 R
>> >>
>>
endobj
25 0 obj
<<
/Length 8100
>>
stream
BT
/F4 20 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 722.599609 Tm
(Testing your first program) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 54.000000 710.299805 Tm
(Factor documentation) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 160.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 172.000000 710.299805 Tm
(Factor handbook) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 254.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 266.000000 710.299805 Tm
(Your first program) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 698.299805 Tm
(Prev:) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 85.000000 698.299805 Tm
(Writing some logic in your first program) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 681.299805 Tm
(Next:) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 85.000000 681.299805 Tm
(Extending your first program) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 643.759766 Tm
(Your ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 79.000000 643.953125 Tm
(palindrome.factor) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 202.000000 643.759766 Tm
( file should look like the following after the previous section:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 631.953125 Tm
(! Copyright \(C\) 2011 <your name here>) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 619.953125 Tm
(! See http://factorcode.org/license.txt for BSD license.) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 607.953125 Tm
(USING: kernel sequences ;) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 595.953125 Tm
(IN: palindrome) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 576.953125 Tm
(: palindrome? \( str -- ? \) dup reverse = ;) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 557.759766 Tm
(We will now test our new word in the listener. If you haven't done so already, add the ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 545.759766 Tm
(palindrome vocabulary to the listener's vocabulary search path:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 533.953125 Tm
(USE: palindrome) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 514.759766 Tm
(Next, push a string on the stack:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 502.953125 Tm
("hello") Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 483.759766 Tm
(Note that the stack display in the listener now shows this string. Having supplied the input, ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 471.759766 Tm
(we call our word:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 459.953125 Tm
(palindrome?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 440.759766 Tm
(The stack display should now have a boolean false - ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 336.000000 440.759766 Tm
(f) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 340.000000 440.759766 Tm
( - which is the word's output. Since ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 428.759766 Tm
("hello" is not a palindrome, this is what we expect. We can get rid of this boolean by calling ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 54.000000 416.759766 Tm
(drop) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 81.000000 416.759766 Tm
(. The stack should be empty after this is done.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 397.759766 Tm
(Now, let's try it with a palindrome; we will push the string and call the word in the same line ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 385.759766 Tm
(of code:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 373.953125 Tm
("racecar" palindrome?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 354.759766 Tm
(The stack should now contain a boolean true - ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 303.000000 354.759766 Tm
(t) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 307.000000 354.759766 Tm
(. We can print it and drop it using the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 506.000000 354.759766 Tm
(.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 510.000000 354.759766 Tm
( word:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 342.953125 Tm
(.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 323.759766 Tm
(What we just did is called ) Tj
ET
BT
/F7 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 193.000000 323.759766 Tm
(interactive testing) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 287.000000 323.759766 Tm
(. A more advanced technique which comes into ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 311.759766 Tm
(play with larger programs is ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 205.000000 311.759766 Tm
(Unit testing) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 271.000000 311.759766 Tm
(.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 292.759766 Tm
(Create a test harness file using the scaffold tool:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 280.953125 Tm
("palindrome" scaffold-tests) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 261.759766 Tm
(Now, open the file named ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 193.000000 261.953125 Tm
(palindrome-tests.factor) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 359.000000 261.759766 Tm
(; it is located in the same directory ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 249.759766 Tm
(as ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 71.000000 249.953125 Tm
(palindrome.factor) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 194.000000 249.759766 Tm
(, and it was created by the scaffold tool.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 230.759766 Tm
(We will add some unit tests, which are similar to the interactive tests we did above. Unit tests ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 218.759766 Tm
(are defined with the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 163.000000 218.759766 Tm
(unit-test) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 211.000000 218.759766 Tm
( word, which takes a sequence of expected outputs, and a ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 206.759766 Tm
(piece of code. It runs the code, and asserts that it outputs the expected values.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 187.759766 Tm
(Add the following two lines to ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 213.000000 187.953125 Tm
(palindrome-tests.factor) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 379.000000 187.759766 Tm
(:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 175.953125 Tm
([ f ] [ "hello" palindrome? ] unit-test) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 163.953125 Tm
([ t ] [ "racecar" palindrome? ] unit-test) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 144.759766 Tm
(Now, you can run unit tests:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 132.953125 Tm
("palindrome" test) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 113.759766 Tm
(It should report that all tests have passed. Now you can read about ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 413.000000 113.759766 Tm
(Extending your first ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 54.000000 101.759766 Tm
(program) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 103.000000 101.759766 Tm
(.) Tj
ET

endstream
endobj
26 0 obj
<<
/Type /Page
/Parent 15 0 R
/Contents 27 0 R
/Resources << /Font <<
/F1 3 0 R /F2 4 0 R /F3 5 0 R
/F4 6 0 R /F5 7 0 R /F6 8 0 R
/F7 9 0 R /F8 10 0 R /F9 11 0 R
/F10 12 0 R /F11 13 0 R /F12 14 0 R
>> >>
>>
endobj
27 0 obj
<<
/Length 7999
>>
stream
BT
/F4 20 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 722.599609 Tm
(Extending your first program) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 54.000000 710.299805 Tm
(Factor documentation) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 160.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 172.000000 710.299805 Tm
(Factor handbook) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 254.000000 710.299805 Tm
( > ) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 266.000000 710.299805 Tm
(Your first program) Tj
ET
BT
/F4 10 Tf
0.200000 0.200000 0.200000 rg
1 0 0 1 54.000000 698.299805 Tm
(Prev:) Tj
ET
BT
/F4 10 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 85.000000 698.299805 Tm
(Testing your first program) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 658.759766 Tm
(Our palindrome program works well, however we'd like to extend it to ignore spaces and ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 646.759766 Tm
(non-alphabetical characters in the input.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 627.759766 Tm
(For example, we'd like it to identify the following as a palindrome:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 615.953125 Tm
("A man, a plan, a canal: Panama.") Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 596.759766 Tm
(However, right now, the simplistic algorithm we use says this is not a palindrome:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 584.953125 Tm
("A man, a plan, a canal: Panama." palindrome? .) Tj
ET
BT
/F6 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 54.000000 572.953125 Tm
(f) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 553.759766 Tm
(We would like it to output ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 191.000000 553.759766 Tm
(t) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 195.000000 553.759766 Tm
( there. We can encode this requirement with a unit test that we ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 541.759766 Tm
(add to ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 91.000000 541.953125 Tm
(palindrome-tests.factor) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 257.000000 541.759766 Tm
(:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 529.953125 Tm
([ t ] [ "A man, a plan, a canal: Panama." palindrome? ] unit-test) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 510.759766 Tm
(If you now run unit tests, you will see a unit test failure:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 498.953125 Tm
("palindrome" test) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 479.759766 Tm
(The next step is to, of course, fix our code so that the unit test can pass.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 460.759766 Tm
(We begin by writing a word which removes blanks and non-alphabetical characters from a ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 448.759766 Tm
(string, and then converts the string to lower case. We call this word ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 413.000000 448.953125 Tm
(normalize) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 478.000000 448.759766 Tm
(. To figure out ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 436.759766 Tm
(how to write this word, we begin with some interactive experimentation in the listener.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 417.759766 Tm
(Start by pushing a character on the stack; notice that characters are really just integers:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 405.953125 Tm
(CHAR: a) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 386.759766 Tm
(Now, use the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 127.000000 386.759766 Tm
(Letter?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 168.000000 386.759766 Tm
( word to test if it is an alphabetical character, upper or lower case:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 374.953125 Tm
(Letter? .) Tj
ET
BT
/F6 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 54.000000 362.953125 Tm
(t) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 343.759766 Tm
(This gives the expected result.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 324.759766 Tm
(Now try with a non-alphabetical character:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 312.953125 Tm
(CHAR: #) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 293.953125 Tm
(Letter? .) Tj
ET
BT
/F6 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 54.000000 281.953125 Tm
(f) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 262.759766 Tm
(What we want to do is given a string, remove all characters which do not match the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 498.000000 262.759766 Tm
(Letter?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 539.000000 262.759766 Tm
( ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 250.759766 Tm
(predicate. Let's push a string on the stack:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 238.953125 Tm
("A man, a plan, a canal: Panama.") Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 219.759766 Tm
(Now, place a quotation containing ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 237.000000 219.759766 Tm
(Letter?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 278.000000 219.759766 Tm
( on the stack; quoting code places it on the stack ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 207.759766 Tm
(instead of executing it immediately:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 195.953125 Tm
([ Letter? ]) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 176.759766 Tm
(Finally, pass the string and the quotation to the ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 306.000000 176.759766 Tm
(filter) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 333.000000 176.759766 Tm
( word:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 164.953125 Tm
(filter) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 145.759766 Tm
(Now the stack should contain the following string:) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 317.000000 145.759766 Tm
("AmanaplanacanalPanama") Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 467.000000 145.759766 Tm
(. ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 474.000000 145.759766 Tm
(This is almost ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 133.759766 Tm
(what we want; we just need to convert the string to lower case now. This can be done by ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 121.759766 Tm
(calling ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 92.000000 121.759766 Tm
(>lower) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 131.000000 121.759766 Tm
(; the ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 158.000000 121.953125 Tm
(>) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 166.000000 121.759766 Tm
( prefix is a naming convention for conversion operations, and should ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 109.759766 Tm
(be read as "to":) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 97.953125 Tm
(>lower) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 78.759766 Tm
(Finally, let's print the top of the stack and discard it:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 66.953125 Tm
(.) Tj
ET

endstream
endobj
28 0 obj
<<
/Type /Page
/Parent 15 0 R
/Contents 29 0 R
/Resources << /Font <<
/F1 3 0 R /F2 4 0 R /F3 5 0 R
/F4 6 0 R /F5 7 0 R /F6 8 0 R
/F7 9 0 R /F8 10 0 R /F9 11 0 R
/F10 12 0 R /F11 13 0 R /F12 14 0 R
>> >>
>>
endobj
29 0 obj
<<
/Length 4214
>>
stream
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 721.759766 Tm
(This will output ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 137.000000 721.953125 Tm
(amanaplanacanalpanama) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 289.000000 721.759766 Tm
(. This string is in the form that we want, and we ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 709.759766 Tm
(evaluated the following code to get it into this form:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 697.953125 Tm
([ Letter? ] filter >lower) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 678.759766 Tm
(This code starts with a string on the stack, removes non-alphabetical characters, and ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 666.759766 Tm
(converts the result to lower case, leaving a new string on the stack. We put this code in a ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 654.759766 Tm
(new word, and add the new word to ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 247.000000 654.953125 Tm
(palindrome.factor) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 370.000000 654.759766 Tm
(:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 642.953125 Tm
(: normalize \( str -- newstr \) [ Letter? ] filter >lower ;) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 623.759766 Tm
(You will need to add ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 165.000000 623.759766 Tm
(unicode.case) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 242.000000 623.759766 Tm
( and ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 269.000000 623.759766 Tm
(unicode.categories) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 379.000000 623.759766 Tm
( to the vocabulary ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 611.759766 Tm
(search path, so that ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 163.000000 611.759766 Tm
(>lower) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 202.000000 611.759766 Tm
( and ) Tj
ET
BT
/F4 12 Tf
0.062745 0.305882 0.545098 rg
1 0 0 1 229.000000 611.759766 Tm
(Letter?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 270.000000 611.759766 Tm
( can be used in the source file.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 592.759766 Tm
(We modify ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 114.000000 592.953125 Tm
(palindrome?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 194.000000 592.759766 Tm
( to first apply ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 266.000000 592.953125 Tm
(normalize) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 331.000000 592.759766 Tm
( to its input:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 580.953125 Tm
(: palindrome? \( str -- ? \) normalize dup reverse = ;) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 561.759766 Tm
(Factor compiles the file from the top down. So, be sure to place the definition for ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 483.000000 561.953125 Tm
(normalize) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 548.000000 561.759766 Tm
( ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 549.759766 Tm
(above the definition for ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 179.000000 549.953125 Tm
(palindrome?) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 259.000000 549.759766 Tm
(.) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 530.759766 Tm
(Now if you press ) Tj
ET
BT
/F3 12 Tf
0.545098 0.270588 0.000000 rg
1 0 0 1 147.000000 530.953125 Tm
(F2) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 162.000000 530.759766 Tm
(, the source file should reload without any errors. You can run unit tests ) Tj
ET
BT
/F1 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 518.759766 Tm
(again, and this time, they will all pass:) Tj
ET
BT
/F3 12 Tf
0.000000 0.000000 0.000000 rg
1 0 0 1 54.000000 506.953125 Tm
("palindrome" test) Tj
ET

endstream
endobj
xref
0 30
0000000000 65535 f
0000000009 00000 n
0000000083 00000 n
00000000B5 00000 n
00000000FB 00000 n
000000013D 00000 n
0000000181 00000 n
00000001CC 00000 n
0000000213 00000 n
000000025C 00000 n
00000002A9 00000 n
00000002F3 00000 n
000000033F 00000 n
0000000391 00000 n
00000003DF 00000 n
000000042F 00000 n
00000004B0 00000 n
000000058F 00000 n
0000000DF4 00000 n
0000000ED3 00000 n
00000020B6 00000 n
0000002195 00000 n
0000004CA4 00000 n
0000004D83 00000 n
00000052BF 00000 n
000000539E 00000 n
0000007376 00000 n
0000007455 00000 n
00000093C8 00000 n
00000094A7 00000 n
trailer
<<
/Size 30
/Info 1 0 R
/Root 2 0 R
>>
startxref
42321
%%EOF